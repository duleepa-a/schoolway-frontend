Index: prisma/schema.prisma
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>generator client {\r\n  provider = \"prisma-client-js\"\r\n  output   = \"../src/generated/prisma\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\n\r\nmodel UserProfile {\r\n  id                                                              String                @id @default(cuid())\r\n  email                                                           String                @unique\r\n  firstname                                                       String?\r\n  createdAt                                                       DateTime              @default(now())\r\n  updatedAt                                                       DateTime              @updatedAt\r\n  lastname                                                        String?\r\n  role                                                            UserRole?\r\n  password                                                        String\r\n  activeStatus                                                    Boolean               @default(true)\r\n  address                                                         String?\r\n  birthDate                                                       DateTime?\r\n  mobile                                                          String?\r\n  nic                                                             String?\r\n  nic_pic                                                         String?\r\n  district                                                        String?\r\n  dp                                                              String?               @default(\"/Images/male_pro_pic_placeholder.png\")\r\n  Child                                                           Child[]\r\n  driverProfile                                                   DriverProfile?\r\n  DriverVanJobRequest_DriverVanJobRequest_driverIdToUserProfile   DriverVanJobRequest[] @relation(\"DriverVanJobRequest_driverIdToUserProfile\")\r\n  DriverVanJobRequest_DriverVanJobRequest_vanOwnerIdToUserProfile DriverVanJobRequest[] @relation(\"DriverVanJobRequest_vanOwnerIdToUserProfile\")\r\n  PrivateHire                                                     PrivateHire[]\r\n  SchoolGuardian                                                  SchoolGuardian?\r\n  Van                                                             Van[]\r\n  payments Payment[]\r\n  vanService                                                      VanService?\r\n}\r\n\r\nmodel VanService {\r\n  id               String      @id @default(cuid())\r\n  serviceName      String\r\n  contactNo        String\r\n  serviceRegNumber String\r\n  businessDocument String?\r\n  userId           String      @unique\r\n  user             UserProfile @relation(fields: [userId], references: [id])\r\n}\r\n\r\nmodel DriverProfile {\r\n  id             String      @id @default(cuid())\r\n  licenseId      String\r\n  licenseExpiry  DateTime\r\n  licenseFront   String?\r\n  licenseBack    String?\r\n  policeReport   String?\r\n  userId         String      @unique\r\n  rating         Float       @default(0)\r\n  ratingCount    Int         @default(0)\r\n  startedDriving DateTime?   @default(now())\r\n  status         Int         @default(2)\r\n  bio            String?\r\n  languages      String[]\r\n  licenseType    String[]\r\n  medicalReport  String?\r\n  relocate       Boolean     @default(false)\r\n  hasVan         Int         @default(0)\r\n  user           UserProfile @relation(fields: [userId], references: [id])\r\n}\r\n\r\nmodel Child {\r\n  id              Int                       @id @default(autoincrement())\r\n  name            String\r\n  age             Int\r\n  profilePicture  String\r\n  vanID           Int?\r\n  schoolStartTime String\r\n  schoolEndTime   String\r\n  qrCode          String                    @unique\r\n  pickupLat       Decimal\r\n  pickupLng       Decimal\r\n  createdAt       DateTime                  @default(now())\r\n  updatedAt       DateTime                  @updatedAt\r\n  schoolID        Int\r\n  grade           Int\r\n  feeAmount     Float                 @default(0)\r\n  pickupLocation  Unsupported(\"geography\")?\r\n  specialNotes    String?\r\n  parentId        String?\r\n  status          ChildStatus               @default(NOT_ASSIGNED)\r\n  pickupAddress   String                    @default(\"Not Specified\")\r\n  UserProfile     UserProfile?              @relation(fields: [parentId], references: [id])\r\n  School          School                    @relation(fields: [schoolID], references: [id])\r\n  Van             Van?                      @relation(fields: [vanID], references: [id])\r\n  VanRequest      VanRequest?\r\n  payments Payment[]\r\n}\r\n\r\nmodel Van {\r\n  id                      Int                   @id @default(autoincrement())\r\n  registrationNumber      String                @unique\r\n  licensePlateNumber      String\r\n  makeAndModel            String\r\n  seatingCapacity         Int\r\n  acCondition             Boolean\r\n  rBookUrl                String\r\n  revenueLicenseUrl       String\r\n  fitnessCertificateUrl   String\r\n  insuranceCertificateUrl String\r\n  photoUrl                String\r\n  createdAt               DateTime              @default(now())\r\n  ownerId                 String\r\n  hasDriver               Boolean               @default(false)\r\n  assignedDriverId        String?\r\n  salaryPercentage        Float?                @default(25.0)\r\n  shiftDetails            String?\r\n  privateRating           Float                 @default(0)\r\n  studentRating           Float                 @default(0)\r\n  hasAssistant            Boolean               @default(false)\r\n  status                  Int                   @default(2)\r\n  pathId                  String?\r\n  endTime                 DateTime?\r\n  startTime               DateTime?\r\n  assistant               Assistant?\r\n  children                Child[]\r\n  DriverVanJobRequests    DriverVanJobRequest[]\r\n  owner                   UserProfile           @relation(fields: [ownerId], references: [id])\r\n  path                    Path?                 @relation(fields: [pathId], references: [id])\r\n}\r\n\r\nmodel Path {\r\n  id                String                  @id\r\n  routeStart        Unsupported(\"geometry\")\r\n  routeEnd          Unsupported(\"geometry\")\r\n  routeGeometry     Unsupported(\"geometry\")\r\n  boundingBox       Unsupported(\"geometry\")\r\n  totalDistance     Float\r\n  estimatedDuration Int\r\n  van               Van[]\r\n  waypoints         WayPoint[]\r\n}\r\n\r\nmodel WayPoint {\r\n  id        Int                     @id @default(autoincrement())\r\n  pathId    String\r\n  name      String\r\n  placeId   String?\r\n  latitude  Float\r\n  longitude Float\r\n  location  Unsupported(\"geometry\")\r\n  order     Int\r\n  isStop    Boolean\r\n  createdAt DateTime                @default(now())\r\n  path      Path                    @relation(fields: [pathId], references: [id])\r\n}\r\n\r\nmodel Assistant {\r\n  id         String  @id @default(uuid())\r\n  name       String\r\n  contact    String\r\n  nic        String\r\n  vanId      Int?    @unique\r\n  profilePic String?\r\n  van        Van?    @relation(fields: [vanId], references: [id])\r\n}\r\n\r\nmodel Payment {\r\n  id        Int      @id @default(autoincrement())\r\n  child     Child    @relation(fields: [childId], references: [id])\r\n  childId   Int\r\n  parentId  String     \r\n  vanId     Int     \r\n  van       Van @relation(fields: [vanId], references: [id])\r\n  amount    Float\r\n  month     String\r\n  status     PaymentStatus @default(PENDING)\r\n  paidAt    DateTime?\r\n  createdAt DateTime @default(now())\r\n  updatedAt DateTime @updatedAt\r\n  paymentType PaymentType @default(SCHOOL_VAN)\r\n  UserProfile     UserProfile?              @relation(fields: [parentId], references: [id])\r\n\r\n\r\n  @@unique([childId, month])\r\n}\r\n\r\nmodel School {\r\n  id             Int              @id @default(autoincrement())\r\n  schoolName     String\r\n  email          String           @unique\r\n  contact        String\r\n  address        String\r\n  createdAt      DateTime         @default(now())\r\n  Child          Child[]\r\n  Gate           Gate[]\r\n  SchoolGuardian SchoolGuardian[]\r\n}\r\n\r\nmodel ContactUs {\r\n  id        Int      @id @default(autoincrement())\r\n  name      String\r\n  email     String\r\n  subject   String\r\n  message   String\r\n  userType  String\r\n  status    String   @default(\"Pending\")\r\n  createdAt DateTime @default(now())\r\n}\r\n\r\nmodel DriverVanJobRequest {\r\n  id                                                      String           @id @default(cuid())\r\n  driverId                                                String\r\n  vanId                                                   Int\r\n  vanOwnerId                                              String\r\n  status                                                  JobRequestStatus @default(PENDING)\r\n  message                                                 String?\r\n  proposedSalary                                          Float?\r\n  turn                                                    String?\r\n  responseMessage                                         String?\r\n  respondedAt                                             DateTime?\r\n  createdAt                                               DateTime         @default(now())\r\n  updatedAt                                               DateTime         @default(now())\r\n  expiresAt                                               DateTime?        @default(dbgenerated(\"(now() + '21 days'::interval)\"))\r\n  UserProfile_DriverVanJobRequest_driverIdToUserProfile   UserProfile      @relation(\"DriverVanJobRequest_driverIdToUserProfile\", fields: [driverId], references: [id])\r\n  Van                                                     Van              @relation(fields: [vanId], references: [id])\r\n  UserProfile_DriverVanJobRequest_vanOwnerIdToUserProfile UserProfile      @relation(\"DriverVanJobRequest_vanOwnerIdToUserProfile\", fields: [vanOwnerId], references: [id])\r\n\r\n  @@unique([driverId, vanOwnerId, vanId])\r\n}\r\n\r\nmodel SchoolGuardian {\r\n  id          Int         @id @default(autoincrement())\r\n  schoolId    Int\r\n  guardianId  String      @unique\r\n  createdAt   DateTime    @default(now())\r\n  email       String      @unique\r\n  firstName   String\r\n  lastName    String\r\n  phone       String?\r\n  updatedAt   DateTime?   @updatedAt\r\n  UserProfile UserProfile @relation(fields: [guardianId], references: [id])\r\n  school      School      @relation(fields: [schoolId], references: [id], onDelete: Cascade)\r\n\r\n  @@index([schoolId])\r\n  @@index([email])\r\n}\r\n\r\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\r\nmodel spatial_ref_sys {\r\n  srid      Int     @id\r\n  auth_name String? @db.VarChar(256)\r\n  auth_srid Int?\r\n  srtext    String? @db.VarChar(2048)\r\n  proj4text String? @db.VarChar(2048)\r\n}\r\n\r\nmodel Child {\r\n  id              Int                       @id @default(autoincrement())\r\n  name            String\r\n  age             Int\r\n  profilePicture  String\r\n  vanID           Int?\r\n  schoolStartTime String\r\n  schoolEndTime   String\r\n  qrCode          String                    @unique\r\n  pickupLat       Decimal\r\n  pickupLng       Decimal\r\n  createdAt       DateTime                  @default(now())\r\n  updatedAt       DateTime\r\n  schoolID        Int\r\n  grade           Int\r\n  pickupLocation  Unsupported(\"geography\")?\r\n  specialNotes    String?\r\n  parentId        String?\r\n  status          String                    @default(\"not assigned\")\r\n  UserProfile     UserProfile?              @relation(fields: [parentId], references: [id])\r\n  School          School                    @relation(fields: [schoolID], references: [id])\r\n  Van             Van?                      @relation(fields: [vanID], references: [id])\r\n}\r\n\r\nmodel Gate {\r\n  id          Int                      @id @default(autoincrement())\r\n  gateName    String\r\n  description String?\r\n  location    Unsupported(\"geometry\")?\r\n  placeName   String?\r\n  address     String?\r\n  isActive    Boolean                  @default(true)\r\n  schoolId    Int\r\n  createdAt   DateTime                 @default(now())\r\n  School      School                   @relation(fields: [schoolId], references: [id], onDelete: Cascade)\r\n\r\n  @@index([isActive])\r\n  @@index([schoolId])\r\n}\r\n\r\nenum UserRole {\r\n  ADMIN\r\n  PARENT\r\n  SERVICE\r\n  DRIVER\r\n  TEACHER\r\n}\r\n\r\nenum JobRequestStatus {\r\n  PENDING\r\n  ACCEPTED\r\n  REJECTED\r\n  CANCELLED\r\n  EXPIRED\r\n}\r\n\r\nenum JobRequestType {\r\n  VAN_OWNER_TO_DRIVER\r\n}\r\n\r\nenum HireStatus {\r\n  PENDING\r\n  ACCEPTED\r\n  REJECTED\r\n  CANCELLED\r\n  COMPLETED\r\n}\r\n\r\nenum PaymentStatus {\r\n  PENDING\r\n  FAILED\r\n  PAID\r\n}\r\n\r\nenum ChildStatus {\r\n  NOT_ASSIGNED\r\n  INACTIVE\r\n  AT_HOME\r\n  AT_SCHOOL\r\n  ON_VAN\r\n}\r\n\r\nenum PaymentType {\r\n  SCHOOL_VAN\r\n  PRIVATE_HIRE\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/prisma/schema.prisma b/prisma/schema.prisma
--- a/prisma/schema.prisma	(revision e12e72af105bb2770811b633bbcaf987d170d004)
+++ b/prisma/schema.prisma	(date 1760248132457)
@@ -29,10 +29,10 @@
   driverProfile                                                   DriverProfile?
   DriverVanJobRequest_DriverVanJobRequest_driverIdToUserProfile   DriverVanJobRequest[] @relation("DriverVanJobRequest_driverIdToUserProfile")
   DriverVanJobRequest_DriverVanJobRequest_vanOwnerIdToUserProfile DriverVanJobRequest[] @relation("DriverVanJobRequest_vanOwnerIdToUserProfile")
+  payments                                                        Payment[]
   PrivateHire                                                     PrivateHire[]
   SchoolGuardian                                                  SchoolGuardian?
   Van                                                             Van[]
-  payments Payment[]
   vanService                                                      VanService?
 }
 
@@ -82,17 +82,17 @@
   updatedAt       DateTime                  @updatedAt
   schoolID        Int
   grade           Int
-  feeAmount     Float                 @default(0)
   pickupLocation  Unsupported("geography")?
   specialNotes    String?
   parentId        String?
+  pickupAddress   String                    @default("Not Specified")
   status          ChildStatus               @default(NOT_ASSIGNED)
-  pickupAddress   String                    @default("Not Specified")
+  feeAmount       Float                     @default(0)
   UserProfile     UserProfile?              @relation(fields: [parentId], references: [id])
   School          School                    @relation(fields: [schoolID], references: [id])
   Van             Van?                      @relation(fields: [vanID], references: [id])
-  VanRequest      VanRequest?
-  payments Payment[]
+  payments        Payment[]
+  VanRequest      VanRequest?
 }
 
 model Van {
@@ -121,36 +121,13 @@
   endTime                 DateTime?
   startTime               DateTime?
   assistant               Assistant?
-  children                Child[]
-  DriverVanJobRequests    DriverVanJobRequest[]
-  owner                   UserProfile           @relation(fields: [ownerId], references: [id])
-  path                    Path?                 @relation(fields: [pathId], references: [id])
-}
-
-model Path {
-  id                String                  @id
-  routeStart        Unsupported("geometry")
-  routeEnd          Unsupported("geometry")
-  routeGeometry     Unsupported("geometry")
-  boundingBox       Unsupported("geometry")
-  totalDistance     Float
-  estimatedDuration Int
-  van               Van[]
-  waypoints         WayPoint[]
-}
-
-model WayPoint {
-  id        Int                     @id @default(autoincrement())
-  pathId    String
-  name      String
-  placeId   String?
-  latitude  Float
-  longitude Float
-  location  Unsupported("geometry")
-  order     Int
-  isStop    Boolean
-  createdAt DateTime                @default(now())
-  path      Path                    @relation(fields: [pathId], references: [id])
+  Child                   Child[]
+  DriverVanJobRequest     DriverVanJobRequest[]
+  payments                Payment[]
+  PrivateHire             PrivateHire[]
+  UserProfile             UserProfile           @relation(fields: [ownerId], references: [id])
+  Path                    Path?                 @relation(fields: [pathId], references: [id])
+  VanRequest              VanRequest[]
 }
 
 model Assistant {
@@ -164,21 +141,20 @@
 }
 
 model Payment {
-  id        Int      @id @default(autoincrement())
-  child     Child    @relation(fields: [childId], references: [id])
-  childId   Int
-  parentId  String     
-  vanId     Int     
-  van       Van @relation(fields: [vanId], references: [id])
-  amount    Float
-  month     String
-  status     PaymentStatus @default(PENDING)
-  paidAt    DateTime?
-  createdAt DateTime @default(now())
-  updatedAt DateTime @updatedAt
-  paymentType PaymentType @default(SCHOOL_VAN)
-  UserProfile     UserProfile?              @relation(fields: [parentId], references: [id])
-
+  id          Int           @id @default(autoincrement())
+  childId     Int
+  parentId    String
+  vanId       Int
+  amount      Float
+  month       String
+  status      PaymentStatus @default(PENDING)
+  paidAt      DateTime?
+  createdAt   DateTime      @default(now())
+  updatedAt   DateTime      @updatedAt
+  paymentType PaymentType   @default(SCHOOL_VAN)
+  child       Child         @relation(fields: [childId], references: [id])
+  UserProfile UserProfile   @relation(fields: [parentId], references: [id])
+  van         Van           @relation(fields: [vanId], references: [id])
 
   @@unique([childId, month])
 }
@@ -253,30 +229,6 @@
   proj4text String? @db.VarChar(2048)
 }
 
-model Child {
-  id              Int                       @id @default(autoincrement())
-  name            String
-  age             Int
-  profilePicture  String
-  vanID           Int?
-  schoolStartTime String
-  schoolEndTime   String
-  qrCode          String                    @unique
-  pickupLat       Decimal
-  pickupLng       Decimal
-  createdAt       DateTime                  @default(now())
-  updatedAt       DateTime
-  schoolID        Int
-  grade           Int
-  pickupLocation  Unsupported("geography")?
-  specialNotes    String?
-  parentId        String?
-  status          String                    @default("not assigned")
-  UserProfile     UserProfile?              @relation(fields: [parentId], references: [id])
-  School          School                    @relation(fields: [schoolID], references: [id])
-  Van             Van?                      @relation(fields: [vanID], references: [id])
-}
-
 model Gate {
   id          Int                      @id @default(autoincrement())
   gateName    String
@@ -293,6 +245,71 @@
   @@index([schoolId])
 }
 
+model Path {
+  id                String                  @id
+  routeStart        Unsupported("geometry")
+  routeEnd          Unsupported("geometry")
+  routeGeometry     Unsupported("geometry")
+  boundingBox       Unsupported("geometry")
+  totalDistance     Float
+  estimatedDuration Int
+  Van               Van[]
+  WayPoint          WayPoint[]
+}
+
+model WayPoint {
+  id        Int                     @id @default(autoincrement())
+  pathId    String
+  name      String
+  placeId   String?
+  latitude  Float
+  longitude Float
+  location  Unsupported("geometry")
+  order     Int
+  isStop    Boolean
+  createdAt DateTime                @default(now())
+  Path      Path                    @relation(fields: [pathId], references: [id])
+}
+
+model VanRequest {
+  id            String        @id @default(cuid())
+  vanId         Int
+  childId       Int           @unique
+  status        RequestStatus @default(PENDING)
+  createdAt     DateTime      @default(now())
+  updatedAt     DateTime      @updatedAt
+  estimatedFare Float         @default(0)
+  child         Child         @relation(fields: [childId], references: [id])
+  van           Van           @relation(fields: [vanId], references: [id])
+}
+
+model PrivateHire {
+  id             String      @id
+  userId         String
+  vanId          Int?
+  pickupLat      Float
+  pickupLng      Float
+  destinationLat Float
+  destinationLng Float
+  departureDate  DateTime
+  returnDate     DateTime?
+  noOfPassengers Int
+  fare           Float
+  notes          String?
+  status         HireStatus  @default(PENDING)
+  createdAt      DateTime    @default(now())
+  updatedAt      DateTime
+  UserProfile    UserProfile @relation(fields: [userId], references: [id])
+  Van            Van?        @relation(fields: [vanId], references: [id])
+}
+
+enum RequestStatus {
+  PENDING
+  ACCEPTED
+  REJECTED
+  CANCELLED
+}
+
 enum UserRole {
   ADMIN
   PARENT
